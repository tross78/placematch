var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") return Reflect.decorate(decorators, target, key, desc);
    switch (arguments.length) {
        case 2: return decorators.reduceRight(function(o, d) { return (d && d(o)) || o; }, target);
        case 3: return decorators.reduceRight(function(o, d) { return (d && d(target, key)), void 0; }, void 0);
        case 4: return decorators.reduceRight(function(o, d) { return (d && d(target, key, o)) || o; }, desc);
    }
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var angular2_1 = require('angular2/angular2');
var http_1 = require('angular2/http');
var angular2_2 = require('angular2/angular2');
var router_1 = require('angular2/router');
var ResultsCmp = (function () {
    function ResultsCmp(http, params) {
        var _this = this;
        this.result = { "results": [] };
        this.spinnerHidden = false;
        var query_str = "";
        if (params.get('home')) {
            query_str += "home=" + params.get('home');
        }
        if (params.get('age')) {
            query_str += "&age=" + params.get('age');
        }
        if (params.get('nightlife')) {
            query_str += "&nightlife=" + params.get('nightlife');
        }
        if (params.get('train')) {
            query_str += "&train=" + params.get('train');
        }
        if (params.get('distance')) {
            query_str += "&distance=" + params.get('distance');
        }
        if (params.get('church')) {
            query_str += "&church=" + params.get('church');
        }
        http.get('/api/query?' + query_str).map(function (res) { return res.json(); }).subscribe(function (res) {
            _this.result = res;
            _this.spinnerHidden = true;
        });
    }
    ResultsCmp.prototype.calcCrimeRate = function (crime_rate_str) {
        var crime_rate_float = parseFloat(crime_rate_str);
        var rate = 'Low';
        if (crime_rate_str == null || crime_rate_str == 0 || crime_rate_str == undefined || isNaN(crime_rate_str)) {
            return rate;
        }
        var percent = crime_rate_float / 100000;
        if (percent > 0.10 && percent < 0.15) {
            rate = 'Low-Medium';
        }
        if (percent > 0.15 && percent < 0.20) {
            rate = 'Medium';
        }
        if (percent > 0.25 && percent < 0.30) {
            rate = 'Medium-High';
        }
        if (percent > 0.30) {
            rate = 'High';
        }
        return rate;
    };
    ResultsCmp.prototype.getWeeklyRent = function (rent) {
        if (rent) {
            return rent.toFixed(2);
        }
        else {
            return "";
        }
    };
    ResultsCmp.prototype.getAgeRange = function (range1, range2, range3, range4, range5) {
        if (range1) {
            return "0 to 20 years - " + range1 + "%";
        }
        else if (range2) {
            return "20 to 35 years - " + range2 + "%";
        }
        else if (range3) {
            return "35 to 50 years - " + range3 + "%";
        }
        else if (range4) {
            return "50 to 80 years - " + range4 + "%";
        }
        else if (range5) {
            return "80+ years - " + range5 + "%";
        }
    };
    ResultsCmp = __decorate([
        angular2_1.Component({
            selector: 'results'
        }),
        angular2_1.View({
            directives: [angular2_2.NgFor],
            templateUrl: "./components/results/results.html"
        }), 
        __metadata('design:paramtypes', [http_1.Http, router_1.RouteParams])
    ], ResultsCmp);
    return ResultsCmp;
})();
exports.ResultsCmp = ResultsCmp;

//# sourceMappingURL=data:application/json;base64,
